---

- name: make shell
  shell: 'pwd warn-no'
  become: yes
  args:
    warn: no

- name: Add the dhis user
  ansible.builtin.user:
    name: "{{dhis_user}}"
    shell: /bin/bash
    groups: "{{deploy_group}}"
    append: yes
    create_home: yes
    home: /home/{{dhis_user}}
    state: present
    password: "{{dhis_password}}"
    update_password: always
  become: yes
  tags: ["deploy", "dhis", "dhis_home"]


- name: Create users' config directory
  file:
    path: /home/{{dhis_user}}/config/
    state: directory
  become: yes

# TODO PR, release; include ssh.cfg and inventory not being committed or being encrypted

- name: create dhis.conf file
  template: 
    src: dhis.conf
    dest: "/home/{{dhis_user}}/config/dhis.conf"
    backup: "yes"
    force: "yes"
    owner: "{{deploy_user}}"
    group: "{{deploy_user}}"
  become: yes
  tags: ["deploy", "dhis"]

- name: set up DHIS home
  shell: '{{item}}'
  become: yes
  with_items:
    - "locale-gen en_US.UTF-8"
    - "mkdir -p /home/{{dhis_user}}/config"
    - "chown -R {{dhis_user}} /home/{{dhis_user}}"
    - "chmod 0600 /home/{{dhis_user}}/config/dhis.conf"
    - chown {{dhis_user}} /home/{{dhis_user}}/config/dhis.conf
  tags: ["deploy", "dhis", "dhis_home"]

- name: set up tomcat folder for DHIS 2
  shell: '{{item}}'
  become: yes
  become_user: "{{dhis_user}}"
  with_items:
    - cd /home/{{dhis_user}} && tomcat9-instance-create {{dhis_user}} -p {{dhis_port}}
  ignore_errors: yes
  tags: ["deploy", "dhis", "dhis_home"]

- name: deploy the WAR files
  shell: '{{item}}'
  become: yes
  become_user: "{{dhis_user}}"
  with_items:
    - wget {{dhis_war_url}} -O /home/{{dhis_user}}/{{dhis_user}}.war
    - cd /home/{{dhis_user}} && mv dhis.war {{dhis_user}}/webapps/ROOT.war
  tags: ["deploy", "dhis", "dhis_home"]

- name: copy the setenv.sh script
  template: 
    src: setenv.sh
    dest: "/home/{{dhis_user}}/{{dhis_user}}/bin/setenv.sh"
    backup: "yes"
    force: "yes"
    owner: "{{dhis_user}}"
    group: "{{deploy_group}}"
    mode: u=rwx,g=rwx,o=rx
  become: yes
  become_user: "{{dhis_user}}"
  tags: ["deploy", "dhis", "dhis_home", "systemd"]

- name: copy the startup.sh script
  template: 
    src: startup.sh
    dest: "/home/{{dhis_user}}/{{dhis_user}}/bin/startup.sh"
    backup: "yes"
    force: "yes"
    owner: "{{dhis_user}}"
    group: "{{deploy_group}}"
    mode: u=rwx,g=rwx,o=rx
  become: yes
  become_user: "{{dhis_user}}"
  tags: ["deploy", "dhis", "dhis_home", "systemd"]

- name: copy the shutdown.sh script
  template: 
    src: shutdown.sh
    dest: "/home/{{dhis_user}}/{{dhis_user}}/bin/shutdown.sh"
    backup: "yes"
    force: "yes"
    owner: "{{dhis_user}}"
    group: "{{deploy_group}}"
    mode: u=rwx,g=rwx,o=rx
  become: yes
  become_user: "{{dhis_user}}"
  tags: ["deploy", "dhis", "dhis_home", "systemd"]

- name: copy the server.xml configuration
  template: 
    src: server.xml
    dest: "/home/{{dhis_user}}/{{dhis_user}}/conf/server.xml"
    backup: "yes"
    force: "yes"
    owner: "{{dhis_user}}"
    group: "{{deploy_group}}"
  become: yes
  become_user: "{{dhis_user}}"
  tags: ["deploy", "dhis", "dhis_home"]

- name: create dhis systemd service file
  template: 
    src: dhis.service
    dest: "/lib/systemd/system/dhis.service"
    backup: "yes"
    force: "yes"
  become: yes
  tags: ["deploy", "dhis", "dhis_home", "systemd"]

- name: reload systemctl daemon, to pick up new files
  shell: 'systemctl daemon-reload'
  become: yes
  tags: ["deploy", "dhis", "dhis_home", "systemd"]

- name: ensure DHIS 2 is (re)started
  ansible.builtin.systemd:
    name: dhis
    state: restarted
    enabled: yes
    force: yes
  become: yes
  tags: ["deploy", "dhis", "dhis_home", "systemd"]

- name: Generate Caddyfile to /etc/caddy/Caddyfile
  template: 
    src: Caddyfile.j2
    dest: "/etc/caddy/Caddyfile"
    backup: "yes"
    force: "yes"
    owner: "caddy"
    group: "caddy"
  become: yes
  tags: ["caddy", "deploy"]

- name: Restart Caddy
  systemd:
    state: restarted
    daemon_reload: "yes"
    enabled: "yes"
    name: caddy
  become: yes
  tags: ["caddy", "deploy"]

- name: Create a folder for Caddy server logs
  file:
    path: "/var/log/caddy"
    state: directory
    mode: "0777"
    recurse: yes
    owner: "{{deploy_user}}"
    group: "{{deploy_group}}"
  become: yes
  tags: ["caddy", "deploy"]

- name: Copy service account file
  ansible.builtin.copy: 
    src: "{{playbook_dir}}/roles/dhis2/templates/dhis-google-auth.json"
    dest: "/home/{{dhis_user}}/config/dhis-google-auth.json"
    backup: "yes"
    force: "yes"
    owner: "{{dhis_user}}"
    group: "{{deploy_group}}"
    mode: u=rw,g=r,o=r
  become: yes
  tags: ["dhis", "deploy", "secrets"]
